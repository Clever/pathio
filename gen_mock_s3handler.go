// Automatically generated by MockGen. DO NOT EDIT!
// Source: pathio.go

package pathio

import (
	s3 "github.com/aws/aws-sdk-go/service/s3"
	gomock "github.com/golang/mock/gomock"
)

// Mock of s3Handler interface
type Mocks3Handler struct {
	ctrl     *gomock.Controller
	recorder *_Mocks3HandlerRecorder
}

// Recorder for Mocks3Handler (not exported)
type _Mocks3HandlerRecorder struct {
	mock *Mocks3Handler
}

func NewMocks3Handler(ctrl *gomock.Controller) *Mocks3Handler {
	mock := &Mocks3Handler{ctrl: ctrl}
	mock.recorder = &_Mocks3HandlerRecorder{mock}
	return mock
}

func (_m *Mocks3Handler) EXPECT() *_Mocks3HandlerRecorder {
	return _m.recorder
}

func (_m *Mocks3Handler) GetBucketLocation(input *s3.GetBucketLocationInput) (*s3.GetBucketLocationOutput, error) {
	ret := _m.ctrl.Call(_m, "GetBucketLocation", input)
	ret0, _ := ret[0].(*s3.GetBucketLocationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_Mocks3HandlerRecorder) GetBucketLocation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBucketLocation", arg0)
}

func (_m *Mocks3Handler) GetObject(input *s3.GetObjectInput) (*s3.GetObjectOutput, error) {
	ret := _m.ctrl.Call(_m, "GetObject", input)
	ret0, _ := ret[0].(*s3.GetObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_Mocks3HandlerRecorder) GetObject(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetObject", arg0)
}

func (_m *Mocks3Handler) PutObject(input *s3.PutObjectInput) (*s3.PutObjectOutput, error) {
	ret := _m.ctrl.Call(_m, "PutObject", input)
	ret0, _ := ret[0].(*s3.PutObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_Mocks3HandlerRecorder) PutObject(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutObject", arg0)
}

func (_m *Mocks3Handler) ListObjects(input *s3.ListObjectsInput) (*s3.ListObjectsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListObjects", input)
	ret0, _ := ret[0].(*s3.ListObjectsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_Mocks3HandlerRecorder) ListObjects(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListObjects", arg0)
}

func (_m *Mocks3Handler) HeadObject(input *s3.HeadObjectInput) (*s3.HeadObjectOutput, error) {
	ret := _m.ctrl.Call(_m, "HeadObject", input)
	ret0, _ := ret[0].(*s3.HeadObjectOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_Mocks3HandlerRecorder) HeadObject(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HeadObject", arg0)
}
